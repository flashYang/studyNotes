css3

css linear-gradient(线性渐变)

-moz-linear-gradient( [ [ <angle> | [top | bottom] || [left | right] ],]? <color-stop>[, <color-stop>]+);

参数： 第一个参数表示线性渐变的方向，top是从上到下，left是从左到右
left top 是从左下到右下， 第二个参数和第三个参数分别是起点的颜色和终点的颜色，也可以是多个颜色

-webkit-gradient(<type>, <point> [, <radius>]?, <point> [, <radius>]? [, <stop>]*)

eg: -webkit-gradient(linear,left top, left bottom, from(#ccc),to(#000))

-webkit-linear-gradient(top,#ccc,#000)
top 上下
left  左右

IE
filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr="#1471da", endColorstr="#1C85FB");/*IE<9>*/
-ms-filter: "progid:DXImageTransform.Microsoft.gradient (GradientType=0, startColorstr="#1471da", endColorstr="#1C85FB")";/*IE8+*/

GradientType = 0 上下
GradientType = 1 左右

ie10
-ms-linear-gradient([ [ <angle> | to <side-or-corner> ] , ] ? <color-stop> [ , <color-stop> 


angle 接收一个deg值
linear            ie10 中0deg 是top         
     90
      |
      |
180 ----- 0
      |
      |
      270

线性渐变是从线的一端过渡到另一端，与之相比，径向渐变则先开始于一点，然后呈圆形或椭圆形由内向外均匀地扩散开。指定径向渐变的方法是：先指定一个中心点，然后是最终的圆形或椭圆形的大小和形状—如果是椭圆形—或 100%，最后是中间的颜色停止点，都由逗号分隔。径向渐变的基本语法如下所示：

radial-gradient([ [ <shape> || <size> ] [ at <position> ] ? , | at <position> , ] ? <color-stop> [ , <color-stop> ] +)

<shape>
可选值，用于指定渐变的结束形状。如果省略此值，则结束形状为圆形（如果 size 参数为单个长度值），否则为椭圆形。
ellipse  指示渐变采用椭圆形状。
circle  指示渐变采用圆形形状。

<size>

http://ie.microsoft.com/testdrive/Graphics/CSSGradientBackgroundMaker/Default.html
http://www.zhangxinxu.com/study/201007/ie-blur-box-shadow-demo.html


透明度

filter: alpha(opacity=80); 
/* IE 8 */
-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)"; 
/* Everyone else */
opacity: 0.8;

text-shadow:
horizontal offset  必需。如果是正值，则绘制偏移到文本右侧的阴影；如果是负值，则绘制偏移到文本左侧的阴影。
vertical offset  必需。如果是正值，则绘制偏移到文本下方的阴影；如果是负值，则绘制偏移到文本上方的阴影。
blur distance  不允许使用负值。如果模糊值为零，则阴影边缘是锐利的。否则，值越大，阴影边缘就越模糊。
spread distance  如果是正值，则阴影形状以指定半径向各个方向扩展。如果是负值，则阴影会收缩。（注：可能不是所有浏览器都支持这个值。）
color  任何受支持的级联样式表 (CSS) 颜色值。


-moz-box-shadow: 投影方式 X轴偏移量 Y轴偏移量 阴影模糊半径 阴影扩展半径 阴影颜色;
//Safari and Google chrome10.0-
-webkit-box-shadow: 投影方式 X轴偏移量 Y轴偏移量 阴影模糊半径 阴影扩展半径 阴影颜色;
//Firefox4.0+ 、 Google chrome 10.0+ 、 Oprea10.5+ and IE9
box-shadow:  投影方式 X轴偏移量 Y轴偏移量 阴影模糊半径 阴影扩展半径 阴影颜色;

ie filter: progid:DXImageTransform.Microsoft.Shadow(color=’颜色值’, Direction=阴影角度（数值）, Strength=阴影半径（数值）);


 transform ： none | <transform-function> [ <transform-function> ]* 
   也就是：
   transform: rotate | scale | skew | translate |matrix;

   rotate 旋转deg  负数逆时针
   translate <x,y> 也就是translate(x,y),它表示对象进行平移，按照设定的x,y参数值,当值为负数时，反方向移动物体，其基点默认为元素 中心点
   扭曲skew


transition主要包含四个属性值：
执行变换的属性：transition-property
transition-duration,在延续时间段，
变换的速率变化transition-timing-function,
1、ease：（逐渐变慢）默认值，ease函数等同于贝塞尔曲线(0.25, 0.1, 0.25, 1.0).

2、linear：（匀速），linear 函数等同于贝塞尔曲线(0.0, 0.0, 1.0, 1.0).

3、ease-in：(加速)，ease-in 函数等同于贝塞尔曲线(0.42, 0, 1.0, 1.0).

4、ease-out：（减速），ease-out 函数等同于贝塞尔曲线(0, 0, 0.58, 1.0).

5、ease-in-out：（加速然后减速），ease-in-out 函数等同于贝塞尔曲线(0.42, 0, 0.58, 1.0)

6、cubic-bezier：（该值允许你去自定义一个时间曲线）， 特定的cubic-bezier曲线。 
   (x1, y1, x2, y2)四个值特定于曲线上点P1和点P2。所有值需在[0, 1]区域内，否则无效。
变换延迟时间transition-delay。


@keyframes IDENT {
     from {
       Properties:Properties value;
     }
     Percentage {
       Properties:Properties value;
     }
     to {
       Properties:Properties value;
     }
   }
   或者全部写成百分比的形式：
   @keyframes IDENT {
      0% {
         Properties:Properties value;
      }
      Percentage {
         Properties:Properties value;
      }
      100% {
         Properties:Properties value;
      }
    }
 一、animation-name:

语法：

  animation-name: none | IDENT[,none | IDENT]*;
 

取值说明：

animation-name:是用来定义一个动画的名称，其主要有两个值：IDENT是由Keyframes创建的动画名，
换句话说此处的IDENT要和Keyframes中的IDENT一致，如果不一致,将不能实现任何动画效果；none为默认值
，当值为none时，将没有任何动画效果。这个属性跟前面所讲的transition一样，
可以同时附几个animation给一个元素，我们只需要用逗号“，”隔开。

二、animation-duration：

语法：

  animation-duration: <time>[,<time>]*
 

取值说明：

animation-duration是用来指定元素播放动画所持续的时间长，取值:<time>为数值，单位为s （秒.）
其默认值为“0”。这个属性跟transition中的transition-duration使用方法是一样的。

三、animation-timing-function:

语法：

   animation-timing-function:ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(<number>, <number>, <number>, <number>) [, ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(<number>, <number>, <number>, <number>)]* 
 

取值说明：

animation-timing-function:是指元素根据时间的推进来改变属性值的变换速率，说得简单点就是动画的播放方式
。他和transition中的transition-timing-function一样，
具有以下六种变换方式：ease;ease-in;ease-in-out;linear;cubic-bezier。具体的使用方法大家可以点这里，
查看其中transition-timing-function的使用方法。

四、animation-delay:

语法：

  animation-delay: <time>[,<time>]*
 

取值说明：

animation-delay:是用来指定元素动画开始时间。取值为<time>为数值，单位为s(秒)，其默认值也是0。
这个属性和transition-delayy使用方法是一样的。

五、animation-iteration-count

语法：

  animation-iteration-count:infinite | <number> [, infinite | <number>]* 
 

取值说明：

animation-iteration-count是用来指定元素播放动画的循环次数，其可以取值<number>为数字，
其默认值为“1”；infinite为无限次数循环。

六、animation-direction

语法：

  animation-direction: normal | alternate [, normal | alternate]* 
取值说明：

animation-direction是用来指定元素动画播放的方向，其只有两个值，默认值为normal，
如果设置为normal时，动画的每次循环都是向前播放；另一个值是alternate，他的作用是，
动画播放在第偶数次向前播放，第奇数次向反方向播放。

七、animation-play-state

语法：

   animation-play-state:running | paused [, running | paused]* 
 

取值说明：

animation-play-state主要是用来控制元素动画的播放状态。其主要有两个值，
running和paused其中running为默认值。他们的作用就类似于我们的音乐播放器一样，
可以通过paused将正在播放的动画停下了，也可以通过running将暂停的动画重新播放，
我们这里的重新播放不一定是从元素动画的开始播放
，而是从你暂停的那个位置开始播放。另外如果暂时了动画的播放，元素的样式将回到最原始设置状态。




